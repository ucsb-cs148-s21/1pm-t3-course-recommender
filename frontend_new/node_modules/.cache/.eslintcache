[{"/Users/jackzhu/Desktop/react-frontend/src/index.js":"1","/Users/jackzhu/Desktop/react-frontend/src/App.js":"2","/Users/jackzhu/Desktop/react-frontend/src/reportWebVitals.js":"3","/Users/jackzhu/Desktop/react-frontend/src/components/UserComponent.js":"4","/Users/jackzhu/Desktop/react-frontend/src/services/UserService.js":"5","/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/index.js":"6","/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/reportWebVitals.js":"7","/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/App.js":"8","/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/components/CourseForm.js":"9","/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/components/CourseComponent.js":"10","/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/services/CourseService.js":"11","/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/components/Result.js":"12"},{"size":500,"mtime":1619410149980,"results":"13","hashOfConfig":"14"},{"size":253,"mtime":1619411781923,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1619410149980,"results":"16","hashOfConfig":"14"},{"size":1544,"mtime":1619411736725,"results":"17","hashOfConfig":"14"},{"size":215,"mtime":1619414185516,"results":"18","hashOfConfig":"14"},{"size":547,"mtime":1619569645579,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1619569645579,"results":"21","hashOfConfig":"20"},{"size":1334,"mtime":1619713365510,"results":"22","hashOfConfig":"20"},{"size":2797,"mtime":1619713381539,"results":"23","hashOfConfig":"20"},{"size":1595,"mtime":1619713386431,"results":"24","hashOfConfig":"20"},{"size":227,"mtime":1619569645579,"results":"25","hashOfConfig":"20"},{"size":2592,"mtime":1619713363489,"results":"26","hashOfConfig":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1cl3g7z",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1rv6e2j",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/jackzhu/Desktop/react-frontend/src/index.js",[],["56","57"],"/Users/jackzhu/Desktop/react-frontend/src/App.js",["58"],"/Users/jackzhu/Desktop/react-frontend/src/reportWebVitals.js",[],"/Users/jackzhu/Desktop/react-frontend/src/components/UserComponent.js",[],"/Users/jackzhu/Desktop/react-frontend/src/services/UserService.js",[],"/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/index.js",[],["59","60"],"/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/reportWebVitals.js",[],"/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/App.js",["61"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CourseComponent from './components/CourseComponent';\nimport { Result } from './components/Result';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { CourseForm } from './components/CourseForm';\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/Input\">Input</Link>\n            </li>\n            <li>\n              <Link to=\"/Result\">Result</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/Input\">\n            <Input />\n          </Route>\n          <Route path=\"/Result\">\n            <Result />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n        <CourseComponent />\n    </div>\n  );\n}\n\nfunction Input() {\n  return (\n    <div className=\"App\">\n        <CourseForm />\n    </div>\n  );\n}\n\n\n\n// export default App;","/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/components/CourseForm.js",["62","63","64","65"],"import React, {useState} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const CourseForm = () => {\n    let [selectedCourses, setSelectedCourses] = useState([]);\n    let history = useHistory();\n\n    // TODO: add an API call to get courses and then swap these hardcoded courses out:\n    const courses = [\n        {\n            id: 1,\n            courseName: \"CMPSC 8\",\n            department: \"CMPSC\",\n            prerequisite: \"\",\n        },\n        {\n            id: 2,\n            courseName: \"CMPSC 16\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 8\",\n        },\n        {\n            id: 3,\n            courseName: \"CMPSC 24\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 4,\n            courseName: \"CMPSC 32\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 24\",\n        },\n        {\n            id: 5,\n            courseName: \"CMPSC 40\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        }\n    ]\n\n    const courseSelected = event => {\n        // event.preventDefault();\n        let { value, checked } = event.target;\n        // TODO: if the value was previously checked and now checked is false then the item must be removed from the list\n        selectedCourses.find(course => course === value)\n        let copy = selectedCourses;\n        copy.push(value)\n        setSelectedCourses(copy)\n    }\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        // console.log(JSON.stringify(selectedCourses));\n        // debugger;\n        let { value } = event.target;\n\n        // Clear selectedCourses from local storage (make room for new selected courses)\n        localStorage.removeItem(selectedCourses);\n        \n        // Set selectedCourses in local storage\n        localStorage.setItem('selectedCourses', JSON.stringify(selectedCourses));\n\n        history.push('/Result');   \n    }\n\n    return (\n        <>\n            <h1>Header</h1>\n            <form onSubmit={handleFormSubmit}>\n                <h5>Enter the courses you have taken:</h5>\n                {\n                    courses.map((course, index) => {\n                        let { id, courseName, department, prerequisite } = course;\n\n                        return (\n                            <div key={`course-${index}`}>\n                                <input type=\"checkbox\" id={`course-id-${id}`} name={courseName} value={courseName} onChange={courseSelected}/>\n                                <label htmlFor={courseName}>{courseName}</label>\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"submit\" value=\"Submit\"></input>\n            </form>\n        </>\n    )\n}","/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/components/CourseComponent.js",[],"/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/services/CourseService.js",[],"/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/components/Result.js",["66"],"import React from 'react';\n\nfunction checkPrerequisite(prerequisite, selectedCourses) {\n    return selectedCourses.includes(prerequisite);\n}\n\nexport const Result = () => {\n\n    const courses = [\n        {\n            id: 1,\n            courseName: \"CMPSC 8\",\n            department: \"CMPSC\",\n            prerequisite: \"\",\n        },\n        {\n            id: 2,\n            courseName: \"CMPSC 16\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 8\",\n        },\n        {\n            id: 3,\n            courseName: \"CMPSC 24\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 4,\n            courseName: \"CMPSC 32\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 24\",\n        },\n        {\n            id: 5,\n            courseName: \"CMPSC 40\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        }\n    ]\n\n    const selectedCourses = JSON.parse(localStorage.getItem('selectedCourses'));\n\n    let resultCourses = [];\n    for (let i = 0; i < courses.length; ++i) {\n        let exist = false;\n        for (let j = 0; j < selectedCourses.length; ++j) {\n            if (courses[i].courseName == selectedCourses[j]) {\n                exist = true;\n                break;\n            }\n        }\n        if (!exist) {\n            if (checkPrerequisite(courses[i].prerequisite, selectedCourses)) {\n                resultCourses.push(courses[i]);\n            }\n        }\n    }\n    // console.log(JSON.stringify(resultCourses));\n    // debugger;\n\n    return (\n        <div>\n            <h1 className = \"text-center\"> Here's a list of course you can take</h1>\n            <table className = \"table table-striped\">\n                <thead>\n                    <tr>\n                        <td> Course Id</td>\n                        <td> CourseName</td>\n                        <td> Department</td>\n                        <td> Prerequisite</td>\n                    </tr>\n\n                </thead>\n                <tbody>\n                    {\n                        resultCourses.map(\n                            course => \n                            <tr key = {course.id}>\n                                 <td> {course.id}</td>   \n                                 <td> {course.courseName}</td>   \n                                 <td> {course.department}</td>   \n                                 <td> {course.prerequisite}</td>   \n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":12},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","replacedBy":"76"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":12},{"ruleId":"71","severity":1,"message":"77","line":44,"column":22,"nodeType":"73","messageId":"74","endLine":44,"endColumn":29},{"ruleId":"71","severity":1,"message":"78","line":56,"column":15,"nodeType":"73","messageId":"74","endLine":56,"endColumn":20},{"ruleId":"71","severity":1,"message":"79","line":74,"column":47,"nodeType":"73","messageId":"74","endLine":74,"endColumn":57},{"ruleId":"71","severity":1,"message":"80","line":74,"column":59,"nodeType":"73","messageId":"74","endLine":74,"endColumn":71},{"ruleId":"81","severity":1,"message":"82","line":48,"column":39,"nodeType":"83","messageId":"84","endLine":48,"endColumn":41},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["85"],["86"],"'checked' is assigned a value but never used.","'value' is assigned a value but never used.","'department' is assigned a value but never used.","'prerequisite' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]