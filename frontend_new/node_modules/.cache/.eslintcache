[{"/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/index.js":"1","/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/reportWebVitals.js":"2","/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/App.js":"3","/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/components/CourseForm.js":"4","/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/components/CourseComponent.js":"5","/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/services/CourseService.js":"6"},{"size":547,"mtime":1619731612885,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1619731612885,"results":"9","hashOfConfig":"8"},{"size":1390,"mtime":1619731612884,"results":"10","hashOfConfig":"8"},{"size":2333,"mtime":1619731612884,"results":"11","hashOfConfig":"8"},{"size":1599,"mtime":1619731612884,"results":"12","hashOfConfig":"8"},{"size":227,"mtime":1619731612886,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7df2z4",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/index.js",[],"/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/reportWebVitals.js",[],"/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/App.js",["28"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CourseComponent from './components/CourseComponent';\n// import CourseForm from './components/CourseForm';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { CourseForm } from './components/CourseForm';\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/Input\">Input</Link>\n            </li>\n            <li>\n              <Link to=\"/Result\">Result</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/Input\">\n            <Input />\n          </Route>\n          <Route path=\"/Result\">\n            <Result />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n        <CourseComponent />\n    </div>\n  );\n}\n\nfunction Input() {\n  return (\n    <div className=\"App\">\n        <CourseForm />\n    </div>\n  );\n}\n\nfunction Result() {\n  return <h2>Result</h2>;\n}\n\n// export default App;","/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/components/CourseForm.js",["29","30","31","32"],"import React, {useState} from 'react';\n\nexport const CourseForm = () => {\n    let [selectedCourses, setSelectedCourses] = useState([]);\n\n\n    // TODO: add an API call to get courses and then swap these hardcoded courses out:\n    const courses = [\n        {\n            id: 1,\n            courseName: \"CMPSC 8\",\n            department: \"CMPSC\",\n            prerequisite: \"\",\n        },\n        {\n            id: 2,\n            courseName: \"CMPSC 16\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 8\",\n        },\n        {\n            id: 3,\n            courseName: \"CMPSC 24\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 4,\n            courseName: \"CMPSC 32\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 24\",\n        },\n        {\n            id: 5,\n            courseName: \"CMPSC 40\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        }\n    ]\n\n    const courseSelected = event => {\n        event.preventDefault();\n        let { value, checked } = event.target;\n        // TODO: if the value was previously checked and now checked is false then the item must be removed from the list\n        selectedCourses.find(course => course === value)\n        let copy = selectedCourses;\n        copy.push(value)\n        setSelectedCourses(copy)\n    }\n\n    const handleFormSubmit = event => {\n        event.preventDefault();  \n        // debugger;\n        let { value } = event.target;      \n    }\n\n    return (\n        <>\n            <h1>Header</h1>\n            <form onSubmit={handleFormSubmit} action=\"\">\n                <h5>Enter the courses you have taken:</h5>\n                {\n                    courses.map((course, index) => {\n                        let { id, courseName, department, prerequisite } = course;\n\n                        return (\n                            <div>\n                                <input type=\"checkbox\" id={`course-id-${id}`} name={courseName} value={courseName} onClick={courseSelected}/>\n                                <label for={courseName}>{courseName}</label>\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"submit\" value=\"Submit\"></input>\n            </form>\n        </>\n\n    )\n}","/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/components/CourseComponent.js",[],"/Users/jessica/Desktop/CS 148/1pm-t3-course-recommender/frontend_new/src/services/CourseService.js",[],{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":43,"column":22,"nodeType":"35","messageId":"36","endLine":43,"endColumn":29},{"ruleId":"33","severity":1,"message":"38","line":54,"column":15,"nodeType":"35","messageId":"36","endLine":54,"endColumn":20},{"ruleId":"33","severity":1,"message":"39","line":64,"column":47,"nodeType":"35","messageId":"36","endLine":64,"endColumn":57},{"ruleId":"33","severity":1,"message":"40","line":64,"column":59,"nodeType":"35","messageId":"36","endLine":64,"endColumn":71},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'checked' is assigned a value but never used.","'value' is assigned a value but never used.","'department' is assigned a value but never used.","'prerequisite' is assigned a value but never used."]