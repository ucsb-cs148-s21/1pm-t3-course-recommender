{"ast":null,"code":"var _jsxFileName = \"/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/components/CourseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CourseForm = () => {\n  _s();\n\n  let [selectedCourses, setSelectedCourses] = useState([]); // TODO: add an API call to get courses and then swap these hardcoded courses out:\n\n  const courses = [{\n    id: 1,\n    courseName: \"CMPSC 8\",\n    department: \"CMPSC\",\n    prerequisite: \"\"\n  }, {\n    id: 2,\n    courseName: \"CMPSC 16\",\n    department: \"CMPSC\",\n    prerequisite: \"CMPSC 8\"\n  }, {\n    id: 3,\n    courseName: \"CMPSC 24\",\n    department: \"CMPSC\",\n    prerequisite: \"CMPSC 16\"\n  }, {\n    id: 4,\n    courseName: \"CMPSC 32\",\n    department: \"CMPSC\",\n    prerequisite: \"CMPSC 24\"\n  }, {\n    id: 5,\n    courseName: \"CMPSC 40\",\n    department: \"CMPSC\",\n    prerequisite: \"CMPSC 16\"\n  }];\n\n  const courseSelected = event => {\n    event.preventDefault();\n    let {\n      value,\n      checked\n    } = event.target; // TODO: if the value was previously checked and now checked is false then the item must be removed from the list\n\n    selectedCourses.find(course => course === value);\n    let copy = selectedCourses;\n    copy.push(value);\n    setSelectedCourses(copy);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    debugger;\n    let {\n      value\n    } = event.target;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      action: \"/Result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Enter the courses you have taken:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), courses.map((course, index) => {\n        let {\n          id,\n          courseName,\n          department,\n          prerequisite\n        } = course;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `course-id-${id}`,\n            name: courseName,\n            value: courseName,\n            onClick: courseSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: courseName,\n            children: courseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CourseForm, \"KIX2osevFx1WJCspJofE9HlRRRg=\");\n\n_c = CourseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseForm\");","map":{"version":3,"sources":["/Users/jackzhu/Desktop/1pm-t3-course-recommender/frontend_new/src/components/CourseForm.js"],"names":["React","useState","CourseForm","selectedCourses","setSelectedCourses","courses","id","courseName","department","prerequisite","courseSelected","event","preventDefault","value","checked","target","find","course","copy","push","handleFormSubmit","map","index"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nexport const CourseForm = () => {\n    let [selectedCourses, setSelectedCourses] = useState([]);\n\n\n    // TODO: add an API call to get courses and then swap these hardcoded courses out:\n    const courses = [\n        {\n            id: 1,\n            courseName: \"CMPSC 8\",\n            department: \"CMPSC\",\n            prerequisite: \"\",\n        },\n        {\n            id: 2,\n            courseName: \"CMPSC 16\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 8\",\n        },\n        {\n            id: 3,\n            courseName: \"CMPSC 24\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 4,\n            courseName: \"CMPSC 32\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 24\",\n        },\n        {\n            id: 5,\n            courseName: \"CMPSC 40\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        }\n    ]\n\n    const courseSelected = event => {\n        event.preventDefault();\n        let { value, checked } = event.target;\n        // TODO: if the value was previously checked and now checked is false then the item must be removed from the list\n        selectedCourses.find(course => course === value)\n        let copy = selectedCourses;\n        copy.push(value)\n        setSelectedCourses(copy)\n    }\n\n    const handleFormSubmit = event => {\n        event.preventDefault();  \n        debugger;\n        let { value } = event.target;      \n    }\n\n    return (\n        <>\n            <h1>Header</h1>\n            <form onSubmit={handleFormSubmit} action=\"/Result\">\n                <h5>Enter the courses you have taken:</h5>\n                {\n                    courses.map((course, index) => {\n                        let { id, courseName, department, prerequisite } = course;\n\n                        return (\n                            <div>\n                                <input type=\"checkbox\" id={`course-id-${id}`} name={courseName} value={courseName} onClick={courseSelected}/>\n                                <label for={courseName}>{courseName}</label>\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"submit\" value=\"Submit\"></input>\n            </form>\n        </>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}