{"version":3,"sources":["components/Auth/Auth0ProviderWithHistory.js","components/nav-bar/LoginButton.js","components/nav-bar/LogoutButton.js","components/nav-bar/AuthNav.js","components/nav-bar/elements.js","components/nav-bar/index.js","services/CourseService.js","components/CourseComponent.js","components/Result.js","components/CourseForm.js","App.js","reportWebVitals.js","index.js"],"names":["Auth0ProviderWithHistory","children","domain","process","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","audience","REACT_APP_AUTH0_AUDIENCE","history","useHistory","redirectUri","window","location","origin","onRedirectCallback","appState","push","returnTo","pathname","LoginButton","loginWithRedirect","useAuth0","Button","onClick","variant","LogoutButton","logout","AuthNav","user","Nav","styled","nav","NavLink","Link","NavBar","to","activeStyle","axios","get","CourseComponent","props","state","courses","CourseService","getCourses","then","response","setState","data","className","this","map","course","id","courseName","department","prerequisite","React","Component","checkPrerequisite","selectedCourses","includes","Result","JSON","parse","localStorage","getItem","resultCourses","i","length","exist","j","CourseForm","useState","setSelectedCourses","courseSelected","event","target","value","checked","find","copy","onSubmit","preventDefault","removeItem","setItem","stringify","index","type","name","onChange","htmlFor","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b63cd58a.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n  const history = useHistory();\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <Button onClick={loginWithRedirect} variant=\"primary\">\n      Log In\n    </Button>\n  );\n};\n\nexport default LoginButton;","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n  return (\n    <Button\n      variant=\"secondary\"\n      onClick={() => logout({ returnTo: window.location.origin })}\n    >\n      Log Out\n    </Button>\n  );\n};\n\nexport default LogoutButton;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LoginButton from \"./LoginButton\";\nimport LogoutButton from \"./LogoutButton\";\n\nconst AuthNav = () => {\n  const { user } = useAuth0();\n  if(user) {\n    return <>\n      <LogoutButton />\n    </>\n  } else {\n    return <LoginButton/>\n  }\n};\n\nexport default AuthNav;","import { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  background: #f4bc1c;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 500px;\n`;\n\nexport const NavLink = styled(Link)`\n  color: #203354;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 1rem 2rem;\n  height: 100%;\n  // cursor: pointer;\n  font-size: 18px;\n\n  &.active {\n    font-weight: 1000;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 20px;\n\n  // @media screen and (max-width: 768px) {\n  //   display: none;\n  }\n`;\n\nexport const NavBtnLink = styled(Link)`\n  border-radius: 5px;\n  background: #203354;\n  padding: 10px 20px;\n  color: #fff;\n  // cursor: pointer;\n  // transition: all 0.2s ease-in-out;\n  // text-decoration: none;\n\n  &:hover {\n    background: #fff;\n    color: #000;\n  }\n`;\n","import React from 'react';\nimport AuthNav from './AuthNav';\nimport {\n  Nav,\n  NavLink,\n  NavBtn,\n  NavBtnLink\n} from './elements';\n\nconst NavBar = () => {\n  return (\n    <>\n      <Nav>\n        <NavLink to='/Survey'activeStyle> Home </NavLink>\n          <NavLink to='/Input' activeStyle> Course List </NavLink>\n          <NavLink to='/Result' activeStyle> Recommended Course </NavLink>\n          <AuthNav />\n      </Nav>\n    </>\n  );\n};\n\nexport default NavBar;\n","import axios from 'axios'\n\nconst COURSES_REST_API_URL = 'https://ucsb-course-recommender.herokuapp.com/api/courses';\n\nclass CourseService {\n\n    getCourses(){\n        return axios.get(COURSES_REST_API_URL);\n    }\n}\n\nexport default new CourseService();\n","import React from 'react';\nimport CourseService from '../services/CourseService';\n\nclass CourseComponent extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            courses:[]\n        }\n    }\n\n    componentDidMount(){\n        CourseService.getCourses().then((response) => {\n            this.setState({ courses: response.data})\n        });\n    }\n\n    render (){\n        return (\n            <div>\n                <h1 className = \"text-center\"> Courses List</h1>\n                <table className = \"table table-striped\">\n                    <thead>\n                        <tr>\n                            <td> Course Id</td>\n                            <td> Course courseName</td>\n                            <td> Course department</td>\n                            <td> Course prerequisite</td>\n                        </tr>\n\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.courses.map(\n                                course => \n                                <tr key = {course.id}>\n                                     <td> {course.id}</td>   \n                                     <td> {course.courseName}</td>   \n                                     <td> {course.department}</td>   \n                                     <td> {course.prerequisite}</td>   \n                                </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default CourseComponent","import React from 'react';\n\nfunction checkPrerequisite(prerequisite, selectedCourses) {\n    return selectedCourses.includes(prerequisite);\n}\n\nexport const Result = () => {\n\n    const courses = [\n        {\n            id: 1,\n            courseName: \"CMPSC 8\",\n            department: \"CMPSC\",\n            prerequisite: \"\",\n        },\n        {\n            id: 2,\n            courseName: \"CMPSC 16\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 8\",\n        },\n        {\n            id: 3,\n            courseName: \"CMPSC 24\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 4,\n            courseName: \"CMPSC 32\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 24\",\n        },\n        {\n            id: 5,\n            courseName: \"CMPSC 40\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 6,\n            courseName: \"CMPSC 48\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 7,\n            courseName: \"CMPSC 64\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 8,\n            courseName: \"CMPSC 111\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 24\",\n        },\n        {\n            id: 9,\n            courseName: \"CMPSC 130A\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 40\",\n        },\n        {\n            id: 10,\n            courseName: \"CMPSC 130B\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 130A\",\n        },\n        {\n            id: 11,\n            courseName: \"CMPSC 138\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 40\",\n        },\n        {\n            id: 12,\n            courseName: \"CMPSC 154\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 64\",\n        },\n        {\n            id: 13,\n            courseName: \"CMPSC 160\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 138\",\n        },\n        {\n            id: 14,\n            courseName: \"CMPSC 162\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 138\",\n        },\n        {\n            id: 15,\n            courseName: \"CMPSC 170\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 154\",\n        }\n        // TODO: add more courses to this list to make the survery comprehensive\n    ]\n\n    const selectedCourses = JSON.parse(localStorage.getItem('selectedCourses'));\n\n    let resultCourses = [];\n    for (let i = 0; i < courses.length; ++i) {\n        let exist = false;\n        for (let j = 0; j < selectedCourses.length; ++j) {\n            if (courses[i].courseName == selectedCourses[j]) {\n                exist = true;\n                break;\n            }\n        }\n        if (!exist) {\n            if (checkPrerequisite(courses[i].prerequisite, selectedCourses)) {\n                resultCourses.push(courses[i]);\n            }\n        }\n    }\n    // console.log(JSON.stringify(resultCourses));\n    // debugger;\n\n    return (\n        <div>\n            <h1 className = \"text-center\"> Here's a list of course you can take</h1>\n            <table className = \"table table-striped\">\n                <thead>\n                    <tr>\n                        <td> Course Id</td>\n                        <td> CourseName</td>\n                        <td> Department</td>\n                        <td> Prerequisite</td>\n                    </tr>\n\n                </thead>\n                <tbody>\n                    {\n                        resultCourses.map(\n                            course => \n                            <tr key = {course.id}>\n                                 <td> {course.id}</td>   \n                                 <td> {course.courseName}</td>   \n                                 <td> {course.department}</td>   \n                                 <td> {course.prerequisite}</td>   \n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const CourseForm = () => {\n    let [selectedCourses, setSelectedCourses] = useState([]);\n    let history = useHistory();\n\n    // TODO: add an API call to get courses and then swap these hardcoded courses out:\n    const courses = [\n        {\n            id: 1,\n            courseName: \"CMPSC 8\",\n            department: \"CMPSC\",\n            prerequisite: \"\",\n        },\n        {\n            id: 2,\n            courseName: \"CMPSC 16\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 8\",\n        },\n        {\n            id: 3,\n            courseName: \"CMPSC 24\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 4,\n            courseName: \"CMPSC 32\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 24\",\n        },\n        {\n            id: 5,\n            courseName: \"CMPSC 40\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 6,\n            courseName: \"CMPSC 48\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 7,\n            courseName: \"CMPSC 64\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 16\",\n        },\n        {\n            id: 8,\n            courseName: \"CMPSC 111\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 24\",\n        },\n        {\n            id: 9,\n            courseName: \"CMPSC 130A\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 40\",\n        },\n        {\n            id: 10,\n            courseName: \"CMPSC 130B\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 130A\",\n        },\n        {\n            id: 11,\n            courseName: \"CMPSC 138\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 40\",\n        },\n        {\n            id: 12,\n            courseName: \"CMPSC 154\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 64\",\n        },\n        {\n            id: 13,\n            courseName: \"CMPSC 160\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 138\",\n        },\n        {\n            id: 14,\n            courseName: \"CMPSC 162\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 138\",\n        },\n        {\n            id: 15,\n            courseName: \"CMPSC 170\",\n            department: \"CMPSC\",\n            prerequisite: \"CMPSC 154\",\n        }\n        // TODO: add more courses to this list to make the survery comprehensive\n    ]\n\n    const courseSelected = event => {\n        // event.preventDefault();\n        let { value, checked } = event.target;\n        // TODO: if the value was previously checked and now checked is false then the item must be removed from the list\n        selectedCourses.find(course => course === value)\n        let copy = selectedCourses;\n        copy.push(value)\n        setSelectedCourses(copy)\n    }\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        // console.log(JSON.stringify(selectedCourses));\n        // debugger;\n        let { value } = event.target;\n\n        // Clear selectedCourses from local storage (make room for new selected courses)\n        localStorage.removeItem(selectedCourses);\n        \n        // Set selectedCourses in local storage\n        localStorage.setItem('selectedCourses', JSON.stringify(selectedCourses));\n\n        history.push('/Result');   \n    }\n\n    return (\n        <>\n            <h1>Header</h1>\n            <form onSubmit={handleFormSubmit}>\n                <h5>Enter the courses you have taken:</h5>\n                {\n                    courses.map((course, index) => {\n                        let { id, courseName, department, prerequisite } = course;\n\n                        return (\n                            <div key={`course-${index}`}>\n                                <input type=\"checkbox\" id={`course-id-${id}`} name={courseName} value={courseName} onChange={courseSelected}/>\n                                <label htmlFor={courseName}>{courseName}</label>\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"submit\" value=\"Submit\"></input>\n            </form>\n        </>\n    )\n}","import React from 'react';\nimport './App.css';\nimport NavBar from './components/nav-bar';\nimport CourseComponent from './components/CourseComponent';\nimport { Result } from './components/Result';\nimport { CourseForm } from './components/CourseForm';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route path='/' exact component={CourseForm} />\n        <Route path='/Survey' component={CourseForm} />\n        <Route path='/Input' component={CourseComponent} />\n        <Route path='/Result' component={Result} />\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Auth0ProviderWithHistory from \"./components/Auth/Auth0ProviderWithHistory\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Auth0ProviderWithHistory>\n        <App />\n      </Auth0ProviderWithHistory>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}