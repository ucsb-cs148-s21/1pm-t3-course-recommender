{"version":3,"sources":["components/nav-bar/elements.js","components/nav-bar/index.js","services/CourseService.js","components/CourseComponent.js","components/Result.js","components/CourseForm.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","nav","NavLink","Link","NavBtn","NavBtnLink","NavBar","to","activeStyle","axios","get","CourseComponent","props","state","courses","CourseService","getCourses","then","response","setState","data","className","this","map","course","id","courseName","department","prerequisite","React","Component","checkPrerequisite","selectedCourses","includes","Result","JSON","parse","localStorage","getItem","resultCourses","i","length","exist","j","push","CourseForm","useState","setSelectedCourses","history","useHistory","courseSelected","event","target","value","checked","find","copy","onSubmit","preventDefault","removeItem","setItem","stringify","index","type","name","onChange","htmlFor","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAGaA,EAAMC,IAAOC,IAAV,kJAQHC,EAAUF,YAAOG,IAAPH,CAAH,mPAePI,EAASJ,IAAOC,IAAV,wKAUNI,EAAaL,YAAOG,IAAPH,CAAH,2Q,OCfRM,EAbA,WACb,OACE,mCACE,eAACP,EAAD,WACE,cAACG,EAAD,CAASK,GAAG,UAASC,aAAW,EAAhC,oBACE,cAACN,EAAD,CAASK,GAAG,SAASC,aAAW,EAAhC,2BACA,cAACN,EAAD,CAASK,GAAG,UAAUC,aAAW,EAAjC,kCACF,eAACJ,EAAD,eAAS,cAACC,EAAD,CAAYE,GAAG,UAAf,qBAAT,a,iDCJO,M,0FALX,WACI,OAAOE,IAAMC,IALQ,iE,MCiDdC,E,kDA9CX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,QAAQ,IAHE,E,qDAOlB,WAAoB,IAAD,OACfC,EAAcC,aAAaC,MAAK,SAACC,GAC7B,EAAKC,SAAS,CAAEL,QAASI,EAASE,Y,oBAI1C,WACI,OACI,gCACI,oBAAIC,UAAY,cAAhB,2BACA,wBAAOA,UAAY,sBAAnB,UACI,gCACI,+BACI,4CACA,oDACA,oDACA,2DAIR,gCAEQC,KAAKT,MAAMC,QAAQS,KACf,SAAAC,GAAM,OACN,+BACK,mCAAMA,EAAOC,MACb,mCAAMD,EAAOE,cACb,mCAAMF,EAAOG,cACb,mCAAMH,EAAOI,kBAJPJ,EAAOC,mB,GAjCpBI,IAAMC,WCDpC,SAASC,EAAkBH,EAAcI,GACrC,OAAOA,EAAgBC,SAASL,GAG7B,IAAMM,EAAS,WAmGlB,IAjGA,IAAMpB,EAAU,CACZ,CACIW,GAAI,EACJC,WAAY,UACZC,WAAY,QACZC,aAAc,IAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,WAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,YACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,aACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,GACJC,WAAY,aACZC,WAAY,QACZC,aAAc,cAElB,CACIH,GAAI,GACJC,WAAY,YACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,GACJC,WAAY,YACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,GACJC,WAAY,YACZC,WAAY,QACZC,aAAc,aAElB,CACIH,GAAI,GACJC,WAAY,YACZC,WAAY,QACZC,aAAc,aAElB,CACIH,GAAI,GACJC,WAAY,YACZC,WAAY,QACZC,aAAc,cAKhBI,EAAkBG,KAAKC,MAAMC,aAAaC,QAAQ,oBAEpDC,EAAgB,GACXC,EAAI,EAAGA,EAAI1B,EAAQ2B,SAAUD,EAAG,CAErC,IADA,IAAIE,GAAQ,EACHC,EAAI,EAAGA,EAAIX,EAAgBS,SAAUE,EAC1C,GAAI7B,EAAQ0B,GAAGd,YAAcM,EAAgBW,GAAI,CAC7CD,GAAQ,EACR,MAGHA,GACGX,EAAkBjB,EAAQ0B,GAAGZ,aAAcI,IAC3CO,EAAcK,KAAK9B,EAAQ0B,IAOvC,OACI,gCACI,oBAAInB,UAAY,cAAhB,mDACA,wBAAOA,UAAY,sBAAnB,UACI,gCACI,+BACI,4CACA,6CACA,6CACA,oDAIR,gCAEQkB,EAAchB,KACV,SAAAC,GAAM,OACN,+BACK,mCAAMA,EAAOC,MACb,mCAAMD,EAAOE,cACb,mCAAMF,EAAOG,cACb,mCAAMH,EAAOI,kBAJPJ,EAAOC,gB,eCxIjCoB,EAAa,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACvBd,EADuB,KACNe,EADM,KAExBC,EAAUC,cAiGRC,EAAiB,SAAAC,GAAS,MAEHA,EAAMC,OAAzBC,EAFsB,EAEtBA,MAFsB,EAEfC,QAEbtB,EAAgBuB,MAAK,SAAA/B,GAAM,OAAIA,IAAW6B,KAC1C,IAAIG,EAAOxB,EACXwB,EAAKZ,KAAKS,GACVN,EAAmBS,IAkBvB,OACI,qCACI,wCACA,uBAAMC,SAlBW,SAAAN,GACrBA,EAAMO,iBAGUP,EAAMC,OAAhBC,MAGNhB,aAAasB,WAAW3B,GAGxBK,aAAauB,QAAQ,kBAAmBzB,KAAK0B,UAAU7B,IAEvDgB,EAAQJ,KAAK,YAMT,UACI,mEA3HI,CACZ,CACInB,GAAI,EACJC,WAAY,UACZC,WAAY,QACZC,aAAc,IAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,WAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,WACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,YACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,EACJC,WAAY,aACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,GACJC,WAAY,aACZC,WAAY,QACZC,aAAc,cAElB,CACIH,GAAI,GACJC,WAAY,YACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,GACJC,WAAY,YACZC,WAAY,QACZC,aAAc,YAElB,CACIH,GAAI,GACJC,WAAY,YACZC,WAAY,QACZC,aAAc,aAElB,CACIH,GAAI,GACJC,WAAY,YACZC,WAAY,QACZC,aAAc,aAElB,CACIH,GAAI,GACJC,WAAY,YACZC,WAAY,QACZC,aAAc,cAoCEL,KAAI,SAACC,EAAQsC,GAAW,IACtBrC,EAA6CD,EAA7CC,GAAIC,EAAyCF,EAAzCE,WAAyCF,EAA7BG,WAA6BH,EAAjBI,aAElC,OACI,gCACI,uBAAOmC,KAAK,WAAWtC,GAAE,oBAAeA,GAAMuC,KAAMtC,EAAY2B,MAAO3B,EAAYuC,SAAUf,IAC7F,uBAAOgB,QAASxC,EAAhB,SAA6BA,MAFjC,iBAAoBoC,OAOhC,uBAAOC,KAAK,SAASV,MAAM,kBCvH5Bc,MAbf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWzB,IACjC,cAAC,IAAD,CAAOuB,KAAK,UAAUE,UAAWzB,IACjC,cAAC,IAAD,CAAOuB,KAAK,SAASE,UAAW3D,IAChC,cAAC,IAAD,CAAOyD,KAAK,UAAUE,UAAWpC,WCR1BqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxD,MAAK,YAAkD,IAA/CyD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.46081fec.chunk.js","sourcesContent":["import { NavLink as Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Nav = styled.nav`\r\n  background: #f4bc1c;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px 500px;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #203354;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 1rem 2rem;\r\n  height: 100%;\r\n  // cursor: pointer;\r\n  font-size: 18px;\r\n\r\n  &.active {\r\n    font-weight: 1000;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 20px;\r\n\r\n  // @media screen and (max-width: 768px) {\r\n  //   display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 5px;\r\n  background: #203354;\r\n  padding: 10px 20px;\r\n  color: #fff;\r\n  // cursor: pointer;\r\n  // transition: all 0.2s ease-in-out;\r\n  // text-decoration: none;\r\n\r\n  &:hover {\r\n    background: #fff;\r\n    color: #000;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  NavBtn,\r\n  NavBtnLink\r\n} from './elements';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <NavLink to='/Survey'activeStyle> Home </NavLink>\r\n          <NavLink to='/Input' activeStyle> Course List </NavLink>\r\n          <NavLink to='/Result' activeStyle> Recommended Course </NavLink>\r\n        <NavBtn> <NavBtnLink to='/SignIn'>Sign In</NavBtnLink> </NavBtn>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import axios from 'axios'\r\n\r\nconst COURSES_REST_API_URL = 'https://ucsb-course-recommender.herokuapp.com/api/courses';\r\n\r\nclass CourseService {\r\n\r\n    getCourses(){\r\n        return axios.get(COURSES_REST_API_URL);\r\n    }\r\n}\r\n\r\nexport default new CourseService();\r\n","import React from 'react';\r\nimport CourseService from '../services/CourseService';\r\n\r\nclass CourseComponent extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            courses:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        CourseService.getCourses().then((response) => {\r\n            this.setState({ courses: response.data})\r\n        });\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <div>\r\n                <h1 className = \"text-center\"> Courses List</h1>\r\n                <table className = \"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td> Course Id</td>\r\n                            <td> Course courseName</td>\r\n                            <td> Course department</td>\r\n                            <td> Course prerequisite</td>\r\n                        </tr>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.courses.map(\r\n                                course => \r\n                                <tr key = {course.id}>\r\n                                     <td> {course.id}</td>   \r\n                                     <td> {course.courseName}</td>   \r\n                                     <td> {course.department}</td>   \r\n                                     <td> {course.prerequisite}</td>   \r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseComponent","import React from 'react';\r\n\r\nfunction checkPrerequisite(prerequisite, selectedCourses) {\r\n    return selectedCourses.includes(prerequisite);\r\n}\r\n\r\nexport const Result = () => {\r\n\r\n    const courses = [\r\n        {\r\n            id: 1,\r\n            courseName: \"CMPSC 8\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"\",\r\n        },\r\n        {\r\n            id: 2,\r\n            courseName: \"CMPSC 16\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 8\",\r\n        },\r\n        {\r\n            id: 3,\r\n            courseName: \"CMPSC 24\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 16\",\r\n        },\r\n        {\r\n            id: 4,\r\n            courseName: \"CMPSC 32\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 24\",\r\n        },\r\n        {\r\n            id: 5,\r\n            courseName: \"CMPSC 40\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 16\",\r\n        },\r\n        {\r\n            id: 6,\r\n            courseName: \"CMPSC 48\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 16\",\r\n        },\r\n        {\r\n            id: 7,\r\n            courseName: \"CMPSC 64\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 16\",\r\n        },\r\n        {\r\n            id: 8,\r\n            courseName: \"CMPSC 111\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 24\",\r\n        },\r\n        {\r\n            id: 9,\r\n            courseName: \"CMPSC 130A\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 40\",\r\n        },\r\n        {\r\n            id: 10,\r\n            courseName: \"CMPSC 130B\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 130A\",\r\n        },\r\n        {\r\n            id: 11,\r\n            courseName: \"CMPSC 138\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 40\",\r\n        },\r\n        {\r\n            id: 12,\r\n            courseName: \"CMPSC 154\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 64\",\r\n        },\r\n        {\r\n            id: 13,\r\n            courseName: \"CMPSC 160\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 138\",\r\n        },\r\n        {\r\n            id: 14,\r\n            courseName: \"CMPSC 162\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 138\",\r\n        },\r\n        {\r\n            id: 15,\r\n            courseName: \"CMPSC 170\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 154\",\r\n        }\r\n        // TODO: add more courses to this list to make the survery comprehensive\r\n    ]\r\n\r\n    const selectedCourses = JSON.parse(localStorage.getItem('selectedCourses'));\r\n\r\n    let resultCourses = [];\r\n    for (let i = 0; i < courses.length; ++i) {\r\n        let exist = false;\r\n        for (let j = 0; j < selectedCourses.length; ++j) {\r\n            if (courses[i].courseName == selectedCourses[j]) {\r\n                exist = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!exist) {\r\n            if (checkPrerequisite(courses[i].prerequisite, selectedCourses)) {\r\n                resultCourses.push(courses[i]);\r\n            }\r\n        }\r\n    }\r\n    // console.log(JSON.stringify(resultCourses));\r\n    // debugger;\r\n\r\n    return (\r\n        <div>\r\n            <h1 className = \"text-center\"> Here's a list of course you can take</h1>\r\n            <table className = \"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <td> Course Id</td>\r\n                        <td> CourseName</td>\r\n                        <td> Department</td>\r\n                        <td> Prerequisite</td>\r\n                    </tr>\r\n\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        resultCourses.map(\r\n                            course => \r\n                            <tr key = {course.id}>\r\n                                 <td> {course.id}</td>   \r\n                                 <td> {course.courseName}</td>   \r\n                                 <td> {course.department}</td>   \r\n                                 <td> {course.prerequisite}</td>   \r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const CourseForm = () => {\r\n    let [selectedCourses, setSelectedCourses] = useState([]);\r\n    let history = useHistory();\r\n\r\n    // TODO: add an API call to get courses and then swap these hardcoded courses out:\r\n    const courses = [\r\n        {\r\n            id: 1,\r\n            courseName: \"CMPSC 8\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"\",\r\n        },\r\n        {\r\n            id: 2,\r\n            courseName: \"CMPSC 16\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 8\",\r\n        },\r\n        {\r\n            id: 3,\r\n            courseName: \"CMPSC 24\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 16\",\r\n        },\r\n        {\r\n            id: 4,\r\n            courseName: \"CMPSC 32\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 24\",\r\n        },\r\n        {\r\n            id: 5,\r\n            courseName: \"CMPSC 40\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 16\",\r\n        },\r\n        {\r\n            id: 6,\r\n            courseName: \"CMPSC 48\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 16\",\r\n        },\r\n        {\r\n            id: 7,\r\n            courseName: \"CMPSC 64\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 16\",\r\n        },\r\n        {\r\n            id: 8,\r\n            courseName: \"CMPSC 111\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 24\",\r\n        },\r\n        {\r\n            id: 9,\r\n            courseName: \"CMPSC 130A\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 40\",\r\n        },\r\n        {\r\n            id: 10,\r\n            courseName: \"CMPSC 130B\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 130A\",\r\n        },\r\n        {\r\n            id: 11,\r\n            courseName: \"CMPSC 138\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 40\",\r\n        },\r\n        {\r\n            id: 12,\r\n            courseName: \"CMPSC 154\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 64\",\r\n        },\r\n        {\r\n            id: 13,\r\n            courseName: \"CMPSC 160\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 138\",\r\n        },\r\n        {\r\n            id: 14,\r\n            courseName: \"CMPSC 162\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 138\",\r\n        },\r\n        {\r\n            id: 15,\r\n            courseName: \"CMPSC 170\",\r\n            department: \"CMPSC\",\r\n            prerequisite: \"CMPSC 154\",\r\n        }\r\n        // TODO: add more courses to this list to make the survery comprehensive\r\n    ]\r\n\r\n    const courseSelected = event => {\r\n        // event.preventDefault();\r\n        let { value, checked } = event.target;\r\n        // TODO: if the value was previously checked and now checked is false then the item must be removed from the list\r\n        selectedCourses.find(course => course === value)\r\n        let copy = selectedCourses;\r\n        copy.push(value)\r\n        setSelectedCourses(copy)\r\n    }\r\n\r\n    const handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        // console.log(JSON.stringify(selectedCourses));\r\n        // debugger;\r\n        let { value } = event.target;\r\n\r\n        // Clear selectedCourses from local storage (make room for new selected courses)\r\n        localStorage.removeItem(selectedCourses);\r\n        \r\n        // Set selectedCourses in local storage\r\n        localStorage.setItem('selectedCourses', JSON.stringify(selectedCourses));\r\n\r\n        history.push('/Result');   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Header</h1>\r\n            <form onSubmit={handleFormSubmit}>\r\n                <h5>Enter the courses you have taken:</h5>\r\n                {\r\n                    courses.map((course, index) => {\r\n                        let { id, courseName, department, prerequisite } = course;\r\n\r\n                        return (\r\n                            <div key={`course-${index}`}>\r\n                                <input type=\"checkbox\" id={`course-id-${id}`} name={courseName} value={courseName} onChange={courseSelected}/>\r\n                                <label htmlFor={courseName}>{courseName}</label>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <input type=\"submit\" value=\"Submit\"></input>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/nav-bar';\r\nimport CourseComponent from './components/CourseComponent';\r\nimport { Result } from './components/Result';\r\nimport { CourseForm } from './components/CourseForm';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route path='/' exact component={CourseForm} />\r\n        <Route path='/Survey' component={CourseForm} />\r\n        <Route path='/Input' component={CourseComponent} />\r\n        <Route path='/Result' component={Result} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}